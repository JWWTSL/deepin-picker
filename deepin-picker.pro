######################################################################
# Automatically generated by qmake (3.0) ?? 2? 4 17:49:37 2017
######################################################################

TEMPLATE = app
TARGET = deepin-picker

CONFIG += link_pkgconfig
CONFIG += c++11 
PKGCONFIG += xcb xcb-util dtkwidget dtkgui
RESOURCES = deepin-picker.qrc

# Input
HEADERS += src/picker.h \
    src/desktopinfo.h \
           src/colormenu.h \		   		   
           src/clipboard.h \		   		   
           src/animation.h \		   		   
           src/dbusnotify.h \		   		   
           src/settings.h \		   		   
           src/utils.h
SOURCES += src/picker.cpp \
    src/desktopinfo.cpp \
           src/colormenu.cpp \		   
           src/clipboard.cpp \		   
           src/animation.cpp \		   
           src/dbusnotify.cpp \		   
           src/settings.cpp \		   
           src/utils.cpp \		   
		   src/main.cpp		   
		   
QT += core
QT += widgets
QT += gui
QT += network
QT += x11extras
QT += dbus
QT += svg

QMAKE_CXXFLAGS += -g
LIBS += -lX11 -lXext -lXtst

isEmpty(PREFIX){
    PREFIX = /usr
}

isEmpty(BINDIR):BINDIR=/usr/bin
isEmpty(ICONDIR):ICONDIR=/usr/share/icons/hicolor/scalable/apps
isEmpty(APPDIR):APPDIR=/usr/share/applications
isEmpty(DSRDIR):DSRDIR=/usr/share/deepin-picker
isEmpty(DOCDIR):DOCDIR=/usr/share/dman/deepin-picker

target.path = $$INSTROOT$$BINDIR
icon.path = $$INSTROOT$$ICONDIR
desktop.path = $$INSTROOT$$APPDIR
#translations.path = $$INSTROOT$$DSRDIR/translations
manual.path = $$INSTROOT$$DOCDIR

icon.files = image/deepin-picker.svg
desktop.files = deepin-picker.desktop
manual.files = manual/*

dbus_service.files = $$PWD/com.deepin.Picker.service
dbus_service.path = $$PREFIX/share/dbus-1/services

#isEmpty(TRANSLATIONS) {
#     include(translations.pri)
#}

#TRANSLATIONS_COMPILED = $$TRANSLATIONS
#TRANSLATIONS_COMPILED ~= s/\.ts/.qm/g

#translations.files = $$TRANSLATIONS_COMPILED

TRANSLATIONS += $$PWD/translations/$${TARGET}.ts \
                $$PWD/translations/$${TARGET}_zh_CN.ts \
                $$PWD/translations/$${TARGET}_en_US.ts \
                $$PWD/translations/$${TARGET}_ar.ts \
                $$PWD/translations/$${TARGET}_ast.ts \
                $$PWD/translations/$${TARGET}_cs.ts \
                $$PWD/translations/$${TARGET}_de.ts \
                $$PWD/translations/$${TARGET}_es_419.ts \
                $$PWD/translations/$${TARGET}_es.ts \
                $$PWD/translations/$${TARGET}_fr.ts \
                $$PWD/translations/$${TARGET}_he.ts \
                $$PWD/translations/$${TARGET}_hr.ts \
                $$PWD/translations/$${TARGET}_id.ts \
                $$PWD/translations/$${TARGET}_it.ts \
                $$PWD/translations/$${TARGET}_lt.ts \
                $$PWD/translations/$${TARGET}_pt_BR.ts \
                $$PWD/translations/$${TARGET}_ru.ts \
                $$PWD/translations/$${TARGET}_sk.ts \
                $$PWD/translations/$${TARGET}_sl.ts \
                $$PWD/translations/$${TARGET}_tr.ts \
                $$PWD/translations/$${TARGET}_uk.ts


translations.path =  $$PREFIX/share/deepin-picker/translations
translations.files = translations/*.qm

INSTALLS = translations target icon desktop manual dbus_service

CONFIG *= release_translations

CONFIG(release_translations) {
    isEmpty(lrelease):lrelease=lrelease
    system($$lrelease $$_PRO_FILE_)
}

#CONFIG(update_translations) {
#    isEmpty(lupdate):lupdate=lupdate
#    system($$lupdate -no-obsolete -locations none $$_PRO_FILE_)
#}


DSR_LANG_PATH += $$DSRDIR/translations
DEFINES += "DSR_LANG_PATH=\\\"$$DSR_LANG_PATH\\\""
